{
  "name": "v1",
  "version": "1.0.0",
  "description": "A simple CAP project.",
  "type": "module",
  "dependencies": {
    "@sap/approuter": "^20.7.1",
    "@sap/cds": "^9",
    "@sap/xssec": "^4.9.1",
    "express": "^4",
    "jwt-decode": "^4.0.0"
  },
  "devDependencies": {
    "@cap-js/cds-test": "^0",
    "@cap-js/sqlite": "^2",
    "@sap/cds-dk": "^9.3.1",
    "ctz": "^0.2.8"
  },
  "scripts": {
    "start": "npx cds serve",
    "watch": "npx cds watch",
    "debug": "npx cds debug",
    "serve": "npm run serve:cds & npm run serve:approuter",
    "serve:cds": "npx cds serve --profile dev",
    "hybrid": "npx cds bind --exec -- npm run serve",
    "hybrid:approuter": "npx cds bind --exec -- npm run serve:approuter",
    "hybrid:mastra": "npx cds bind --profile hybrid --exec -- npm run dev -w app/mastra",
    "hybrid:cds": "npm bind --exec -- cds serve",
    "serve:approuter": "node node_modules/@sap/approuter/approuter.js  --workingDir chart/router --port 9000 ",
    "build": "npx cds build --production && cp -r app/router gen/chart/router",
    "build:containers": "ctz containerize.yaml --log",
    "build:push": "ctz containerize.yaml --log --push",
    "bind:postgres": "npx cds bind db --to v1-mastra-db --on k8s",
    "bind:srv": "cds bind --to-app-services router-srv --on k8s",
    "bind:router": "npx cds bind --to-app-services v1-approuter --on k8s",
    "bind:auth": "cds bind v1 -2 router-srv-auth --on k8s",
    "bind:destination": "cds bind -2 router-srv-destination --on k8s",
    "bind:all": "npx cds bind -2 router-srv-auth --on k8s && cds bind -2 router-srv-destination --on k8s",
    "bind:list": "cds bind --list",
    "bind:remove": "cds bind --remove",
    "resolve:db": "npx cds env requires.db --resolve-bindings --profile hybrid",
    "setup:local": "npm run bind:all && npm run hybrid",
    "setup:dev": "npm install && npm run bind:auth && npm run serve",
    "deploy": "npx cds up -2 k8s",
    "deploy:helm": "npm run build && helm upgrade v1 ./gen/chart --install --create-namespace",
    "deploy:mastra:fast": "npm run build:containers -- --modules=agents/mastra --push && npm run deploy:helm",
    "copy-docker-secret": "./scripts/copy-docker-secret.sh",
    "deploy:cf": "cds deploy",
    "add:approuter": "cds add approuter",
    "add:ias": "cds add ias",
    "add:xsuaa": "cds add xsuaa",
    "add:multitenancy": "cds add multitenancy",
    "add:audit": "cds add audit",
    "add:rest": "cds add rest",
    "add:odata": "cds add odata",
    "add:sql": "cds add sql",
    "add:sqlite": "cds add sqlite",
    "add:hana": "cds add hana",
    "lint": "cds lint",
    "compile": "cds compile",
    "compile:sql": "cds compile --to sql",
    "compile:java": "cds compile --to java",
    "compile:ts": "cds compile --to ts",
    "version": "cds version",
    "help": "cds help",
    "cds": "cds",
    "ctz": "ctz",
    "test": "node --test",
    "test:auth": "npx cds bind --profile hybrid --exec -- node ./e2e-test/auth.test.spec.js",
    "test:memory": "npx cds bind --profile hybrid --exec -- node ./e2e-test/memory-persistence.test.spec.js"
  },
  "private": true,
  "cds": {
    "requires": {
      "auth": {
        "kind": "ias",
        "config": {
          "validation": {
            "x5t": {
              "enabled": false
            },
            "proofToken": {
              "enabled": false
            }
          }
        }
      },
      "[dev]": {
        "auth": {
          "kind": "mocked",
          "users": {
            "alice": {
              "tenant": "t1",
              "roles": [
                "admin"
              ]
            },
            "bob": {
              "tenant": "t2",
              "roles": [
                "user"
              ]
            }
          }
        }
      },
      "[prod]": {
        "auth": {
          "kind": "ias",
          "config": {
            "validation": {
              "x5t": {
                "enabled": false
              },
              "proofToken": {
                "enabled": false
              }
            }
          }
        }
      },
      "[hybrid]": {
        "auth": {
          "kind": "ias",
          "config": {
            "validation": {
              "x5t": {
                "enabled": false
              },
              "proofToken": {
                "enabled": false
              }
            }
          }
        },
        "db": {
          "kind": "postgres"
        }
      },
      "destinations": true
    }
  },
  "workspaces": [
    "app/*"
  ]
}
