name: Kyma Setup

description: "Installs dependencies for Kyma deployment"

inputs:
  registry:
    description: Image Registry
    required: true
  user:
    description: Registry User
    required: true
  password:
    description: Registry Password
    required: true
  kube-config:
    description: Base64-encoded Kubernetes Config
    required: true

runs:
  using: "composite"
  steps:
    - name: Cache apt packages
      uses: actions/cache@v4
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-${{ hashFiles('/etc/apt/sources.list.d/**') }}
        restore-keys: |
          ${{ runner.os }}-apt-
          
    - run: apt-get update -y
      shell: bash
    - run: apt-get install software-properties-common -y
      shell: bash
    - run: apt-get install curl ca-certificates -y
      shell: bash
    - run: apt install sudo
      shell: bash
    - run: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      shell: bash
    - run: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
      shell: bash
    - run: apt-get update -y
      shell: bash
    - run: apt-get install make -y
      shell: bash
    - run: apt-get install maven -y
      shell: bash
    - run: apt-get install jq -y
      shell: bash
    - run: apt-get install yq -y
      shell: bash
    - run: apt-get install docker.io -y
      shell: bash
    - run: docker --version
      shell: bash
    - name: Set up Docker Buildx
      shell: bash
      run: |
        # Install Docker Buildx plugin
        mkdir -p ~/.docker/cli-plugins/
        curl -SL https://github.com/docker/buildx/releases/download/v0.12.1/buildx-v0.12.1.linux-amd64 -o ~/.docker/cli-plugins/docker-buildx
        chmod a+x ~/.docker/cli-plugins/docker-buildx
        # Create and use buildx builder
        docker buildx create --name mybuilder --use --bootstrap
        docker buildx inspect --bootstrap
    - run: (curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.31.0/pack-v0.31.0-linux.tgz" | sudo tar -C /usr/local/bin/ --no-same-owner -xzv pack)
      shell: bash
    - run: apt-get install kubectl -y
      shell: bash
    - name: Cache Helm binary
      uses: actions/cache@v4
      with:
        path: /usr/local/bin/helm
        key: ${{ runner.os }}-helm-v3.19.0
        restore-keys: |
          ${{ runner.os }}-helm-
          
    - run: |
        if [ ! -f "/usr/local/bin/helm" ]; then
          curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        else
          echo "Helm already cached"
        fi
      shell: bash
      
    - name: Cache ctz binary
      uses: actions/cache@v4
      with:
        path: ~/.npm/_npx
        key: ${{ runner.os }}-npx-ctz-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npx-ctz-
          
    - run: npm install -g ctz
      shell: bash
    - shell: bash
      run: |
          mkdir ${HOME}/kyma-binaries
          export PATH=${HOME}/kyma-binaries/:$PATH
          echo "${{ inputs.password }}" | docker login "${{ inputs.registry }}" -u "${{ inputs.user }}" --password-stdin
          mkdir ${HOME}/.kube
          echo "${{ inputs.kube-config }}" | base64 --decode > ${HOME}/.kube/config
